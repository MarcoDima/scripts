heat_template_version: 2013-05-23

# # # # # # # # # # # # # # # # # # # # # # # # # 
#                 DESCRIPTION                   #
# # # # # # # # # # # # # # # # # # # # # # # # # 
description: >
  Simple template to deploy an example instance
  (This description can go on several lines)


# # # # # # # # # # # # # # # # # # # # # # # # # 
#                 PARAMETERS                    #
# # # # # # # # # # # # # # # # # # # # # # # # # 

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
  image_id:
    type: string
    label: Image ID - ubuntu-xenial-16.04_softwareconfig_0.0.2
    description: Image to be used for compute instance
    default: fbb3d9ed-615d-453c-9419-cf6165356384
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    default: gp1.small
  availability_zone:
    type: string
    description: Name of the availability zone for the instance
    default: zone00
  private_network:
    type: string
    label: Private network name or ID
    description: Network to attach instance to.
    default: my_network
  public_net:
    type: string
    description: public network id
    default: public00
  secgroup_id:
    type: string
    description : Id of the security groupe
    default: default
  #subnet:
    #type: string
    #description: Subnet on which the load balancer will be located
    #default: subnet
    #constraints:
    #- custom_constraint: neutron.subnet


# # # # # # # # # # # # # # # # # # # # # # # # # 
#                 RESOURCES                     #
# # # # # # # # # # # # # # # # # # # # # # # # # 

resources:
  private_net:
    type: OS::Neutron::Net
    properties:
      name: my_network
  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: subnet
      network_id: { get_resource: private_net }
      cidr: 192.168.0.0/24
      gateway_ip: 192.168.0.1
  router1:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }
  router1_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router1 }
      subnet_id: { get_resource: private_subnet }
  nginx_1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      security_groups: [ get_param: secgroup_id ]
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
  #nginx_1_floating_ip:
    #type: OS::Neutron::FloatingIP
    #properties:
      #floating_network_id: { get_param: public_net }
      #port_id: { get_resource: nginx_1_port }
  nginx1:
    type: OS::Nova::Server
    properties:
      name: Nginx_1
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      availability_zone: { get_param: availability_zone }
      networks: 
      - port: { get_resource: nginx_1_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            
            echo "Installing nginx..."
            apt-get update
            apt-get -y install $server
          
            echo "Adjusting firewall..."
            ufw allow 'Nginx HTTP'
            systemctl restart $server
            systemctl enable $server

            echo -e "<!DOCTYPE html> \\n
              <html> \\n
              <head> \\n
              <title>Welcome to nginx!</title>\\n
              <style>\\n
                body {\\n
                  width: 35em;\\n
                  margin: 0 auto;\\n
                  font-family: Tahoma, Verdana, Arial, sans-serif;\\n
                }\\n
              </style>\\n
              </head>\\n
              <body>\\n
              <h1>Welcome to nginx!</h1>\\n
              <h3>Hostname: $ip </h3>\\n
              <p>If you see this page, the nginx web server is successfully installed and\\n
                working. Further configuration is required.</p>\\n

              <p>For online documentation and support please refer to\\n
              <a href="http://nginx.org/">nginx.org</a>.<br/>\\n
              Commercial support is available at\\n
              <a href="http://nginx.com/">nginx.com</a>.</p>\\n
              <p><em>Thank you for using nginx.</em></p>\\n
              </body>\\n
              </html>\\n " > /usr/share/nginx/html/index.html 
              cat /usr/share/nginx/html/index.html > /var/www/html/index.nginx-debian.html

          params:
            $server: nginx
            $ip: server1
  pool_member1:
    type: OS::Neutron::LBaaS::PoolMember
    #depends_on: nginx1
    properties:
      pool: { get_resource: pool }
      address: { get_attr: [nginx1, first_address] }
      protocol_port: 8080
      #subnet: { get_param: subnet }
      subnet: { get_attr: [ private_subnet, name ] }
  nginx_2_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      security_groups: [ get_param: secgroup_id ]
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
  nginx_2_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource: nginx_2_port }
  nginx2:
    type: OS::Nova::Server
    properties:
      name: Nginx_2
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      availability_zone: { get_param: availability_zone }
      networks: 
      - port: { get_resource: nginx_2_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            
            echo "Installing nginx..."
            apt-get update
            apt-get -y install $server
          
            echo "Adjusting firewall..."
            ufw allow 'Nginx HTTP'
            systemctl restart $server
            systemctl enable $server
            echo -e "<!DOCTYPE html> \\n
              <html> \\n
              <head> \\n
              <title>Welcome to nginx!</title>\\n
              <style>\\n
                body {\\n
                  width: 35em;\\n
                  margin: 0 auto;\\n
                  font-family: Tahoma, Verdana, Arial, sans-serif;\\n
                }\\n
              </style>\\n
              </head>\\n
              <body>\\n
              <h1>Welcome to nginx!</h1>\\n
              <h3>Hostname: $ip </h3>\\n
              <p>If you see this page, the nginx web server is successfully installed and\\n
                working. Further configuration is required.</p>\\n

              <p>For online documentation and support please refer to\\n
              <a href="http://nginx.org/">nginx.org</a>.<br/>\\n
              Commercial support is available at\\n
              <a href="http://nginx.com/">nginx.com</a>.</p>\\n
              <p><em>Thank you for using nginx.</em></p>\\n
              </body>\\n
              </html>\\n " > /usr/share/nginx/html/index.html 
              cat /usr/share/nginx/html/index.html > /var/www/html/index.nginx-debian.html

          params:
            $server: nginx
            $ip: server2
  pool_member2:
  #depends_on: nginx2
    type: OS::Neutron::LBaaS::PoolMember
    properties:
      pool: { get_resource: pool }
      address: { get_attr: [nginx2, first_address] }
      protocol_port: 8080
      #subnet: { get_param: subnet }
      subnet: { get_attr: [ private_subnet, name ] }
  lbaas_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      security_groups: [ get_param: secgroup_id ]
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
  lb_vip_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource: lbaas_port }          
  listener:
    type: OS::Neutron::LBaaS::Listener
    properties:
      loadbalancer: { get_resource: lbaas }
      protocol: HTTP
      protocol_port: 80
  pool:
    type: OS::Neutron::LBaaS::Pool
    properties:
      name: lb_front_pool
      protocol: HTTP
      lb_algorithm: ROUND_ROBIN
      listener: { get_resource: listener }
  lbaas:
    type: OS::Neutron::LBaaS::LoadBalancer
    properties:
      name: NginxLbaaS
      vip_subnet: { get_attr: [ private_subnet, name ] }
  
  #monitor:

# # # # # # # # # # # # # # # # # # # # # # # # # 
#                 OUTPUTS                       #
# # # # # # # # # # # # # # # # # # # # # # # # # 

outputs:
  instance_ip1:
    description: The IP address of the deployed instance
    value: { get_attr: [nginx1, first_address] }
  instance_ip2:
    description: The IP address of the deployed instance
    value: { get_attr: [nginx2, first_address] }
  lbaas_port_id:
    description: LbaaS
    value: { get_attr: [lbaas, vip_port_id ] }
  pr_net:
    description: private subnet  
    value: { get_attr: [ private_subnet, name ] }